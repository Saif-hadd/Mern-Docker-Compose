name: CI - Build & Push Docker Images

on:
  push:
    branches:
      - main

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # NÃ©cessaire pour SonarCloud

      - name: Install Snyk
        run: npm install -g snyk

      # Backend Build & Scan
      - name: Build and Load Backend Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:${{ github.sha }} ./mern/backend
          docker images

      - name: Run Snyk Security Scan (Backend)
        run: |
          cd mern/backend
          snyk test --all-projects
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Install Trivy
        run: |
          sudo apt-get update && sudo apt-get install -y wget
          wget https://github.com/aquasecurity/trivy/releases/download/v0.50.1/trivy_0.50.1_Linux-64bit.tar.gz
          tar zxvf trivy_0.50.1_Linux-64bit.tar.gz
          sudo mv trivy /usr/local/bin/
          trivy --version

      - name: Scan Backend Docker Image for Vulnerabilities
        run: |
          trivy image --scanners vuln --severity HIGH,CRITICAL ${{ secrets.DOCKER_USERNAME }}/backend:${{ github.sha }}

      - name: Install SonarScanner
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner-cli-5.0.1.3006-linux.zip
          mv sonar-scanner-5.0.1.3006-linux sonar-scanner

      - name: Run SonarCloud Analysis for Backend
        run: |
          ./sonar-scanner/bin/sonar-scanner -Dsonar.projectKey=Saif-hadd_Mern-Docker-Compose -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} -Dsonar.host.url=https://sonarcloud.io -Dsonar.token=${{ secrets.SONAR_TOKEN }} -Dsonar.sources=./mern/backend -Dsonar.sourceEncoding=UTF-8
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Push Backend Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:${{ github.sha }}

      # Frontend Build & Scan
      - name: Build and Load Frontend Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:${{ github.sha }} ./mern/frontend
          docker images

      - name: Run Snyk Security Scan (Frontend)
        run: |
          cd mern/frontend
          snyk test --all-projects
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Scan Frontend Docker Image for Vulnerabilities
        run: |
          trivy image --scanners vuln --severity HIGH,CRITICAL ${{ secrets.DOCKER_USERNAME }}/frontend:${{ github.sha }}

      - name: Run SonarCloud Analysis for Frontend
        run: |
          ./sonar-scanner/bin/sonar-scanner -Dsonar.projectKey=Saif-hadd_Mern-Docker-Compose -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} -Dsonar.host.url=https://sonarcloud.io -Dsonar.token=${{ secrets.SONAR_TOKEN }} -Dsonar.sources=./mern/frontend -Dsonar.sourceEncoding=UTF-8
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Push Frontend Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:${{ github.sha }}

      # Reporting and Notifications
      - name: Notify Slack on Success
        if: success()
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Build succeeded for commit ${{ github.sha }}! Backend & Frontend images pushed to Docker Hub."}' ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack on Failure
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Build failed for commit ${{ github.sha }}! Check the logs for details."}' ${{ secrets.SLACK_WEBHOOK_URL }}
