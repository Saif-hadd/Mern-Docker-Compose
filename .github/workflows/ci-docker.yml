name: CI - Build & Push Docker Images

on:
  push:
    branches:
      - main  # Déclenche ce workflow uniquement lors d'un push sur la branche main

jobs:
  docker:
    runs-on: ubuntu-latest  # Utiliser un runner Ubuntu

    steps:
      # Étape 1: Récupérer le code source
      - name: Checkout
        uses: actions/checkout@v4  # Vérifie que le code est cloné depuis le repo

      # Étape 2: Connexion à Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3  # Connexion à Docker Hub via les secrets GitHub
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}  # Nom d'utilisateur Docker Hub
          password: ${{ secrets.DOCKERHUB_PASSWORD }}  # Mot de passe Docker Hub (pas un token)

      # Étape 3: Configurer QEMU (pour la compatibilité multi-plateforme)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Étape 4: Configurer Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Étape 5: Build et Push Backend avec Docker Buildx
      - name: Build and Push Backend
        uses: docker/build-push-action@v6
        with:
          context: ./mern/backend  # Dossier du backend
          push: true  # Pousser l'image sur Docker Hub
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest

      # Étape 6: Build et Push Frontend avec Docker Buildx
      - name: Build and Push Frontend
        uses: docker/build-push-action@v6
        with:
          context: ./mern/frontend  # Dossier du frontend
          push: true  # Pousser l'image sur Docker Hub
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest
