name: CI - Build & Push Docker Images

on:
  push:
    branches:
      - main  # Déclencher uniquement sur la branche main

jobs:
  docker:
    runs-on: ubuntu-latest  # Utiliser un runner Ubuntu

    steps:
      # Étape 1: Récupérer le code source
      - name: Checkout
        uses: actions/checkout@v4  # Vérifie que le code est cloné depuis le repo

      # Étape 2: Connexion à Docker Hub
      - name: Connexion à Docker Hub
        uses: docker/login-action@v3  # Connexion à Docker Hub via les secrets GitHub
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Nom d'utilisateur Docker Hub
          password: ${{ secrets.DOCKER_PASSWORD }}  # Mot de passe Docker Hub

      # Étape 3: Configurer QEMU pour la compatibilité multi-plateforme
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Étape 4: Configurer Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Étape 5: Build du Backend (sans push)
      - name: Build Backend Image
        uses: docker/build-push-action@v6
        with:
          context: ./mern/backend
          tags: ${{ secrets.DOCKER_USERNAME }}/backend:${{ github.sha }}
          push: false  # Ne pas pousser l'image ici

      # Étape 6: Installer Trivy via wget
      - name: Install Trivy
        run: |
          sudo apt-get update && sudo apt-get install -y wget
          wget https://github.com/aquasecurity/trivy/releases/download/v0.59.1/trivy_0.59.1_Linux-64bit.tar.gz
          tar zxvf trivy_0.59.1_Linux-64bit.tar.gz
          sudo mv trivy /usr/local/bin/

      # Étape 7: Scan de sécurité de l'image Backend
      - name: Scan Docker image for vulnerabilities
        run: trivy image ${{ secrets.DOCKER_USERNAME }}/backend:${{ github.sha }}

      # Étape 8: Push du Backend
      - name: Push Backend Image
        uses: docker/build-push-action@v6
        with:
          context: ./mern/backend
          tags: ${{ secrets.DOCKER_USERNAME }}/backend:${{ github.sha }}
          push: true

      # Étape 9: Build et Push du Frontend avec Docker Buildx
      - name: Build and Push Frontend
        uses: docker/build-push-action@v6
        with:
          context: ./mern/frontend  # Dossier du frontend
          push: true  # Pousser l'image sur Docker Hub
          tags: ${{ secrets.DOCKER_USERNAME }}/frontend:${{ github.sha }}  # Utilisation dynamique du nom d'utilisateur
